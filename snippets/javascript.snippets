# anonymous function
snippet anon
	function(${1}) {${2}}

# function
snippet fun
	function ${1:function_name}(${2}) {
		${3}
	}

# var function
snippet vfun
	var ${1:function_name} = function(${2}) {
		${3}
	};

# method
snippet met
	${1:method_name}: function(${2}) {
		${4}
	}${3:,}

# prototype
snippet proto
	${1:class_name}.prototype.${2:method_name} = function(${3}) {
	    ${4}
	};

#obj
snippet obj
	${2:var }${1:object_name} = {${3}};

#define backbone
snippet defbb
	define(['jquery', 'underscore', 'backbone'${1}], function($, _, Backbone${2}){
		'use strict';
		${3}
	});

# define backbone collection
snippet defbbc
	define(['jquery', 'underscore', 'backbone', 'models/${1:mymodel}'], function($, _, Backbone, ${2:Model}){
		'use strict';
		return Backbone.Collection.extend({
			model: $2,
			url: '${3:api/}'
		});${4}
	});

# define backbone model
snippet defbbm
	define(['jquery', 'underscore', 'backbone'], function($, _, Backbone){
		'use strict';
		return Backbone.Model.extend();${1}
	});

# define backbone view
snippet defbbv
	define(['jquery', 'underscore', 'backbone'], function($, _, Backbone){
		'use strict';
		return Backbone.View.extend();${1}
	});

# slice arguments
snippet arguments
	Array.prototype.slice.call(arguments)${1}

# console.log
snippet log
	console.log(${1});

# use strict
snippet strict
	'use strict';${1}

# force new
snippet forcenew
	if ((!this instanceof arguments.callee)) {
		return new arguments.callee(${1:arguments});
	}
	${2}

# ternary
snippet ternary
	${1:/* condition */} ? ${2:a} : ${3:b}

# return
snippet ret
	return ${1};

# self
snippet self
	var self = this${1:;}

# for loop
snippet for
	for (var ${3:i} = 0, ${2:l} = ${1:arr}.length; $3 < $2; $3++) {
		${4}
	}

# if
snippet if
	if (${1:true}) {
		${2}
	}

# else
snippet else
	else {
		${1}
	}

# else if
snippet elif
	else if (${1}) {
		${2}
	}

# switch
snippet switch
	switch (${1:expression}) {
		case '${3:case}':
			${4}
			break;
		${5}
		default:
			${2}
	}

# case
snippet case
	case '${1:case}':
		${2}
		break;
	${3}

# while (...) {...}
snippet while
	while (${1:/* condition */}) {
		${2}
	}

# do...while
snippet do
	do {
		${2}
	} while (${1:/* condition */});

# Get Elements By Tag Name
snippet getElt
	getElementsByTagName('${2}')${3}

# Get Elements By Name
snippet getEln
	getElementsByName('${2}')${3}

# Get Element
snippet getEli
	getElementById('${2}')${3}

# setTimeout
snippet timeout
	setTimeout(function() { ${1} }, ${2:10});
